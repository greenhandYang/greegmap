package texttable;

import java.util.HashMap;
import java.util.Map;
//两数之和


//方法一，暴力枚举
class Solution {
	public int[] twoSum(int[] nums,int target) {
		int n = nums.length;
		for (int i=0;i<n;++i) {
			for(int j=i+1;j<n;++j) {
				if(nums[i]+nums[j] == target) {
					return new int[] {i,j};
					
				}
			}
		}
		return new int[0];
	}

}
//空间复杂度O(1)  时间复杂度（N²）



//哈希表
class Solution2 {
	public int[] twoSum(int nums[],int target) {
		Map<Integer,Integer>hashtable=new HashMap<Integer,Integer>();
		int n=nums.length;
		for(int i=0;i<n;++i) {
			if(hashtable.containsKey(target-nums[i])) {
				return new int[] {
						hashtable.get(target-nums[i])
						};
				}
				hashtable.put(nums[i], i);
			}
			return new int[0];
			
		
	}
}

//https://leetcode.cn/problems/two-sum/solution/liang-shu-zhi-he-by-leetcode-solution/
//空间复杂度（N） 时间复杂度（N）
